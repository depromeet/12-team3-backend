plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id 'jacoco'
	id 'org.asciidoctor.jvm.convert' version '3.1.0'
}

group = 'com.depromeet'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

bootJar {
	dependsOn asciidoctor
	from ('$/html5') {
		into 'static/docs'
	}
}

asciidoctor {
	dependsOn test
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			// 'element'가 없으면 프로젝트의 전체 파일을 합친 값을 기준으로 한다.
			limit {
				// 'counter'를 지정하지 않으면 default는 'INSTRUCTION'
				// 'value'를 지정하지 않으면 default는 'COVEREDRATIO'
				minimum = 0.30
			}
		}

		rule {
			enabled = true

			// 룰을 체크할 단위는 클래스 단위
			element = 'CLASS'

			// 브랜치 커버리지를 최소한 90% 만족시켜야 한다.
			limit {
				counter = 'BRANCH'
				value = 'COVEREDRATIO'
				minimum = 0.90
			}

			// 라인 커버리지를 최소한 80% 만족시켜야 한다.
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.80
			}

			// 빈 줄을 제외한 코드의 라인수를 최대 200라인으로 제한한다.
			limit {
				counter = 'LINE'
				value = 'TOTALCOUNT'
				maximum = 200
			}

			// 커버리지 체크를 제외할 클래스들
			excludes = [
//                    '*.test.*',
			]
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

tasks.named('test') {
	useJUnitPlatform()
}
